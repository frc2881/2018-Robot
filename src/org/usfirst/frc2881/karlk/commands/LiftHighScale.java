// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2881.karlk.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2881.karlk.Robot;

/**
 *
 */
public class LiftHighScale extends Command {
    public LiftHighScale() {
        requires(Robot.liftSubsystem);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        //Set the set point for the lift
        double output = 0;
        //Enable PID loop
        Robot.liftSubsystem.setSetpoint(output);
        Robot.liftSubsystem.setPercentTolerance(0);
        Robot.liftSubsystem.enable();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        //Check limits
        Robot.liftSubsystem.checkTopLimit();
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        //When encoder reads described number of ticks (within tolerance)
        return Robot.liftSubsystem.onTarget();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        //stop PID loop
        Robot.liftSubsystem.disable();
    }


}
